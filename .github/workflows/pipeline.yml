name: CI/CD Pipeline
on:
  push:
    branches:
      - "master"
      - "feature/*"
  pull_request:
    branches:
      - "master"
jobs:
  compile-and-test:
    name: Compile and Test
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven
      - name: Run Maven command
        run: mvn -B clean test
  build-jar:
    needs: compile-and-test
    name: Build the jar
    runs-on: ubuntu-latest
    steps:
      - name: Clone the repo
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven
      - name: Run Maven command
        run: mvn -B -DskipTests clean package
  terraform-plan:
    needs: build-jar
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Run Terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: |
          terraform init
          terraform plan
  terraform-apply:
    needs: terraform-plan
    name: Terraform Apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Run Terraform apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        run: terraform show